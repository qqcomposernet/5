def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    def func3(arg8, arg9):
        var10 = 879 & (arg9 & (var7 & arg1))
        var11 = arg9 + var7
        var12 = ((arg8 + arg9) ^ -1258500285) | arg1
        var13 = arg8 + 445442966 + -684351920
        var14 = (var11 - arg2) ^ -1426038080 | arg9
        var15 = var13 & var13 & arg2
        if var12 < var7:
            var16 = var10 + (var12 & var12 + var13)
        else:
            var16 = var15 + 786 ^ arg8 | var14
        var17 = var13 | (-662 ^ (var13 + var15))
        var18 = (arg1 - var12) + var15
        var19 = var7 - arg1 - 695417998
        var20 = var11 & (var12 & arg8)
        var21 = (var11 & arg8) + arg9 & arg1
        var22 = var11 + var12 + 2082081384 + var10
        var23 = (var15 ^ (747 & arg9)) - var14
        var24 = var18 | (var10 | var20)
        var25 = -856006678 - (arg1 & var23)
        var26 = var22 - (var13 - arg2) ^ -46
        var27 = var26 | (var17 & var7) | var13
        var28 = var10 & 449109045
        var29 = arg8 + var23
        var30 = arg8 - var11
        var31 = var30 | arg9 & var20 | var13
        var32 = var28 & arg8 + var7
        result = var30 + ((var15 ^ var17 ^ (var24 - var31) ^ arg9) + (var21 | var15 - (var11 & var26) | var11))
        return result
    var33 = func3(var7, arg2)
    var38 = func4(arg1, arg2)
    var42 = func5(arg2, var7)
    var43 = func9()
    var44 = (arg2 | var38) - var33 & var33
    if arg1 < var7:
        var45 = var44 ^ var44
    else:
        var45 = -916 - var42 + var43 | arg2
    var46 = (arg2 - arg2) ^ var33
    if var7 < var44:
        var47 = -751 - arg1
    else:
        var47 = var38 | var46
    var48 = var46 ^ (arg2 + arg2) & var38
    var49 = var42 | (var43 | arg2 & var43)
    var50 = arg2 & arg1
    var51 = arg2 ^ 59
    var52 = arg2 | var49
    var53 = (932 - (524 - var50)) & var52
    var54 = var48 - ((-204 ^ var50) | var46)
    if var43 < arg2:
        var55 = (var48 | var44) - var50 - arg1
    else:
        var55 = var46 | var43 | var52
    var56 = var33 | var50
    var57 = arg2 | -1593582544
    result = var52 ^ var38 ^ var46 ^ ((var57 & var38) ^ (var51 - var38 + var50 | var56 ^ var51) + var38 - var50)
    return result
def func9():
    func7()
    result = len(xrange(12))
    func8()
    return result
def func8():
    global len
    del len
def func7():
    global len
    len = lambda x : 2
def func4(arg34, arg35):
    if arg34 < arg35:
        var36 = (arg34 | -1) & 582
    else:
        var36 = -277 & (-776 + 1815831304) - arg35
    if arg34 < arg34:
        var37 = arg34 - arg35 - 1007768535
    else:
        var37 = (arg34 + 810 & -197229432 ^ arg34 + (-2107331862 ^ arg35) & arg35) ^ arg35
    result = arg35 & arg34
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in xrange(38):
        var5 += var6 - arg4
    return var5
def func5(arg39, arg40):
    closure = [0]
    def func6(acc, rest):
        var41 = (-3 & (closure[0] | (rest & acc + 9 + -3))) | -4
        closure[0] += var41
        if acc == 0:
            return var41
        else:
            result = func6(acc - 1, var41)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 58'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
